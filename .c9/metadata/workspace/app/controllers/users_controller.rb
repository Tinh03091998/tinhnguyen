{"filter":false,"title":"users_controller.rb","tooltip":"/app/controllers/users_controller.rb","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["class UsersController < ApplicationController","  before_action :set_user, only: [:show, :edit, :update, :destroy]","","  # GET /users","  # GET /users.json","  def index","    @users = User.all","  end","","  # GET /users/1","  # GET /users/1.json","  def show","  end","","  # GET /users/new","  def new","    @user = User.new","  end","","  # GET /users/1/edit","  def edit","  end","","  # POST /users","  # POST /users.json","  def create","    @user = User.new(user_params)","","    respond_to do |format|","      if @user.save","        format.html { redirect_to @user, notice: 'User was successfully created.' }","        format.json { render :show, status: :created, location: @user }","      else","        format.html { render :new }","        format.json { render json: @user.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /users/1","  # PATCH/PUT /users/1.json","  def update","    respond_to do |format|","      if @user.update(user_params)","        format.html { redirect_to @user, notice: 'User was successfully updated.' }","        format.json { render :show, status: :ok, location: @user }","      else","        format.html { render :edit }","        format.json { render json: @user.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /users/1","  # DELETE /users/1.json","  def destroy","    @user.destroy","    respond_to do |format|","      format.html { redirect_to users_url, notice: 'User was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_user","      @user = User.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def user_params","      params.fetch(:user, {})","    end","end",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":18,"column":3},"action":"insert","lines":["class UsersController < ApplicationController","  def edit","    @user = current_user","  end","","  def update","    @user = current_user","    if @user.update(user_params)","      redirect_to root_path, notice: 'Profile was successfully updated.'","    else","      render :edit","    end","  end","","  private","  def user_params","    params.require(:user).permit(:user_name, :telephone)","  end","end"],"id":3}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":18,"column":3},"end":{"row":18,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1505620187656,"hash":"a6e3dbf83b563f8904b2260574c663a36fbf4545"}